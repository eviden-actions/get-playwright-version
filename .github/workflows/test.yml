name: Validate

# Controls when the action will run.
on:
  # Allows you to call this workflow from other workflows
  workflow_call:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test-npm:
    name: '🧪 Test NPM'
    runs-on: ubuntu-latest

    steps:
      - name: '☁️ Checkout repository'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - name: '⚙️ Use Node.js'
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          check-latest: true
          cache: 'npm'

      - name: '🧹 Remove package-lock'
        run: rm -f package-lock.json

      - name: '🎭 Install playwright'
        run: npm i @playwright/test

      - name: '✅ Test code'
        id: get-version
        uses: ./

      - name: 'Verify version'
        shell: bash
        env:
          playwright_version: ${{ steps.get-version.outputs.playwright-version }}
        run: |
          version_string=$(npx playwright --version) 
          # Extract version number using regex
          version_number=v$(echo "$version_string" | grep -oP '\d+\.\d+\.\d+')

          if [ "$version_number" == $playwright_version ]; then
            echo "Versions match: $version_number"
          else
            echo "Versions do not match. Expected: $playwright_version, Actual: $version_number"
            exit 1
          fi

  test-no-version:
    name: '🧪 Test no version'
    runs-on: ubuntu-latest

    steps:
      - name: '☁️ Checkout repository'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - name: '⚙️ Use Node.js'
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          check-latest: true
          cache: 'npm'

      - name: '✅ Test code'
        id: get-version
        uses: ./
        with:
          no-version-found: 'warning'
        # Check that the action doesn't fail  
        

  test-yarn:
    name: '🧪 Test Yarn'
    runs-on: ubuntu-latest

    steps:
      - name: '☁️ Checkout repository'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - name: '⚙️ Use Node.js'
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          check-latest: true
          cache: 'npm'

      - name: '🎭 Install YARN'
        run: npm i -g yarn

      - name: '🧹 Remove package-lock'
        run: rm -f package-lock.json

      - name: '🎭 Install playwright'
        run: yarn add @playwright/test

      - name: '✅ Test code'
        id: get-version
        uses: ./

      - name: 'Verify version'
        shell: bash
        env:
          playwright_version: ${{ steps.get-version.outputs.playwright-version }}
        run: |
          version_string=$(npx playwright --version) 
          # Extract version number using regex
          version_number=v$(echo "$version_string" | grep -oP '\d+\.\d+\.\d+')

          if [ "$version_number" == $playwright_version ]; then
            echo "Versions match: $version_number"
          else
            echo "Versions do not match. Expected: $playwright_version, Actual: $version_number"
            exit 1
          fi

  test-pnpm:
    name: '🧪 Test PNPM'
    runs-on: ubuntu-latest

    steps:
      - name: '☁️ Checkout repository'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - name: '⚙️ Use Node.js'
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          check-latest: true
          cache: 'npm'

      - name: '🎭 Install PNPM'
        run: npm i -g pnpm

      - name: '🧹 Remove package-lock'
        run: rm -f package-lock.json

      - name: '🎭 Install playwright'
        run: pnpm add @playwright/test

      - name: '✅ Test code'
        id: get-version
        uses: ./

      - name: 'Verify version'
        shell: bash
        env:
          playwright_version: ${{ steps.get-version.outputs.playwright-version }}
        run: |
          version_string=$(npx playwright --version) 
          # Extract version number using regex
          version_number=v$(echo "$version_string" | grep -oP '\d+\.\d+\.\d+')

          if [ "$version_number" == $playwright_version ]; then
            echo "Versions match: $version_number"
          else
            echo "Versions do not match. Expected: $playwright_version, Actual: $version_number"
            exit 1
          fi
